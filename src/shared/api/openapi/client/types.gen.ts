// This file is auto-generated by @hey-api/openapi-ts

export type ResourceIdResponse = {
  id: number
}

export type BaseError = {
  error_code?: string
  error_message?: string
}

export type User = {
  id: number
  first_name: string
  last_name: string
  links?: {
    avatar: string
  }
}

export type UserResponseBody = {
  data?: User
}

export type Post = {
  id: number
  title: string
  description: string
  content: string
  date: string
  read_time: number
  categories_ids: Array<number>
  comments_ids: Array<number>
  links: {
    image: string
  }
}

export type PostResponseBodyList = {
  data: Array<Post>
  related: {
    categories: Array<Category>
  }
}

export type Comment = {
  id: number
  date: string
  content: string
  user_id: number
}

export type CommentResponseBodyList = {
  data: Array<Comment>
  related: {
    users: Array<User>
  }
}

export type CommentRequestBody = {
  date: string
  content: string
  user_id: number
  post_id: number
}

export type Category = {
  id: number
  title: string
}

export type CategoryResponseBodyList = {
  data: Array<Category>
}

export type GetUserAvatarByIdData = {
  body?: never
  path: {
    id: number
  }
  query?: never
  url: '/users/avatar/{id}'
}

export type GetUserAvatarByIdErrors = {
  /**
   * Unexpected error
   */
  default: BaseError
}

export type GetUserAvatarByIdError =
  GetUserAvatarByIdErrors[keyof GetUserAvatarByIdErrors]

export type GetUserAvatarByIdResponses = {
  /**
   * Successfully obtained the avatar of the user
   */
  200: Blob | File
}

export type GetUserAvatarByIdResponse =
  GetUserAvatarByIdResponses[keyof GetUserAvatarByIdResponses]

export type GetAllPostsData = {
  body?: never
  path?: never
  query?: never
  url: '/blog/posts'
}

export type GetAllPostsErrors = {
  /**
   * Unexpected error
   */
  default: {
    error_code?: string
    error_message?: string
  }
}

export type GetAllPostsError = GetAllPostsErrors[keyof GetAllPostsErrors]

export type GetAllPostsResponses = {
  /**
   * Successfully obtained a list of the posts
   */
  200: PostResponseBodyList
}

export type GetAllPostsResponse =
  GetAllPostsResponses[keyof GetAllPostsResponses]

export type GetPostImageByIdData = {
  body?: never
  path: {
    id: number
  }
  query?: never
  url: '/blog/posts/image/{id}'
}

export type GetPostImageByIdErrors = {
  /**
   * Unexpected error
   */
  default: {
    error_code?: string
    error_message?: string
  }
}

export type GetPostImageByIdError =
  GetPostImageByIdErrors[keyof GetPostImageByIdErrors]

export type GetPostImageByIdResponses = {
  /**
   * Successfully obtained the image for the post
   */
  200: Blob | File
}

export type GetPostImageByIdResponse =
  GetPostImageByIdResponses[keyof GetPostImageByIdResponses]

export type GetAllCommentsByPostData = {
  body?: never
  path?: never
  query: {
    post_id: number
  }
  url: '/blog/comments'
}

export type GetAllCommentsByPostErrors = {
  /**
   * Unexpected error
   */
  default: {
    error_code?: string
    error_message?: string
  }
}

export type GetAllCommentsByPostError =
  GetAllCommentsByPostErrors[keyof GetAllCommentsByPostErrors]

export type GetAllCommentsByPostResponses = {
  /**
   * Successfully obtained a list of the comments for the post
   */
  200: CommentResponseBodyList
}

export type GetAllCommentsByPostResponse =
  GetAllCommentsByPostResponses[keyof GetAllCommentsByPostResponses]

export type PostCommentData = {
  body: CommentRequestBody
  path?: never
  query?: never
  url: '/blog/comments'
}

export type PostCommentErrors = {
  /**
   * Unexpected error
   */
  default: {
    error_code?: string
    error_message?: string
  }
}

export type PostCommentError = PostCommentErrors[keyof PostCommentErrors]

export type PostCommentResponses = {
  /**
   * Successfully posted the comment
   */
  201: ResourceIdResponse
}

export type PostCommentResponse =
  PostCommentResponses[keyof PostCommentResponses]

export type GetAllCategoriesData = {
  body?: never
  path?: never
  query?: never
  url: '/blog/categories'
}

export type GetAllCategoriesErrors = {
  /**
   * Unexpected error
   */
  default: {
    error_code?: string
    error_message?: string
  }
}

export type GetAllCategoriesError =
  GetAllCategoriesErrors[keyof GetAllCategoriesErrors]

export type GetAllCategoriesResponses = {
  /**
   * Successfully obtained a list of the categories
   */
  200: CategoryResponseBodyList
}

export type GetAllCategoriesResponse =
  GetAllCategoriesResponses[keyof GetAllCategoriesResponses]

export type ClientOptions = {
  baseURL: 'http://127.0.0.1:4010' | 'http://localhost:3000' | (string & {})
}
